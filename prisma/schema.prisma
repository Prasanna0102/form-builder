datasource db {
  provider = "postgresql" // Or your database provider
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

model Service {
  id            String   @id @default(uuid())
  title         String
  description   String
  link          String?
  icon          String
  Forms         Form[]
  Applications  Application[]
}

model Form {
  id                   String          @id @default(uuid())
  title                String
  description          String
  areQuestionsRequired Boolean
  conditionalQuestions Json
  staticQuestions      Json
  isDocumentationRequired Boolean
  documentation        String[]
  isPaymentNeeded      Boolean
  amount               Float?
  isNoteNeeded         Boolean
  serviceId            String
  Service              Service         @relation(fields: [serviceId], references: [id])
  Responses            Response[]
  CustomFields         CustomField[]
  ApplicationForms     ApplicationForm[]
  Application          Application[]
}


model Response {
  id           String       @id @default(uuid())
  formId       String
  Form         Form?        @relation(fields: [formId], references: [id])
  responseData Json         // JSON input for form data
  s3Url        String       // URL to the stored response JSON
  createdAt    DateTime     @default(now())
  Attachments  Attachment[] // Relation to attachments
}

model Attachment {
    id          String   @id @default(uuid())
    responseId  String
    fileName    String
    fileUrl     String
    fileType    String
    createdAt   DateTime @default(now())
    Response    Response @relation(fields: [responseId], references: [id])

    @@unique([responseId, fileName]) // Composite unique constraint
}


model CustomField {
  id          String @id @default(uuid())
  label       String
  fieldType   String
  options     Json?
  formId      String
  Form        Form @relation(fields: [formId], references: [id])
}

model Application {
  id               String             @id @default(uuid())
  formId           String
  Form             Form               @relation(fields: [formId], references: [id])
  clientId         String
  status           String
  additionalInfo   Json?
  notifiedAt       DateTime?
  Notification     Notification[]
  ApplicationForm  ApplicationForm[]
  Service          Service[]
}

model ApplicationForm {
  id             String       @id @default(uuid())
  formId         String
  Form           Form         @relation(fields: [formId], references: [id])
  applicationId  String
  Application    Application  @relation(fields: [applicationId], references: [id])
  createdAt      DateTime     @default(now())
}

model Notification {
  id              String        @id @default(uuid())
  applicationId   String
  Application     Application   @relation(fields: [applicationId], references: [id])
  message         String
  createdAt       DateTime      @default(now())
}
